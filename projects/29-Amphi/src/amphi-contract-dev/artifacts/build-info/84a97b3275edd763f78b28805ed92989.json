{
	"id": "84a97b3275edd763f78b28805ed92989",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"CalculateUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nerror ParameterException(string);\r\n\r\ncontract CalculateUtils {\r\n    uint256 constant RATE = 100;\r\n    uint256 constant VF_N = 3;\r\n\r\n    // uint256 private TransRate ;\r\n    //获得罚金比率\r\n    function punishRatio(uint256 _bounts) public pure returns (uint256) {\r\n        uint256 ratio;\r\n        if (_bounts < RATE) {\r\n            ratio = 1;\r\n        } else if (_bounts >= RATE && _bounts < RATE * 1e1) {\r\n            ratio = 1e1;\r\n        } else if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r\n            ratio = 1e2;\r\n        } else if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r\n            ratio = 1e3;\r\n        } else if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r\n            ratio = 1e4;\r\n        } else if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r\n            ratio = 1e5;\r\n        } else {\r\n            revert ParameterException(\r\n                \"Unable to calculate,Please submit a request\"\r\n            );\r\n        }\r\n        return ratio;\r\n    }\r\n\r\n    //修改汇率\r\n    // function setRate(uint256 _rate) internal onlyOwner{\r\n    //     rate = _rate;\r\n    // }\r\n    //校对工作量（人） 校对人数= 翻译人数/校对工作量\r\n    // function setvfN(uint256 _vfN) internal onlyOwner {\r\n    //     vfN =_vfN;\r\n    // }\r\n    function getMatNumber(uint256 _transNumber)\r\n        external\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        uint256 _maxV;\r\n        if (_transNumber <= VF_N) {\r\n            _maxV = 1;\r\n        } else {\r\n            _maxV = _transNumber/VF_N;\r\n        }\r\n        return _maxV;\r\n    }\r\n\r\n    //计算任务赏金-翻译者\r\n    function getBountyForTrans(uint256 _bounty)\r\n        public  \r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 60);\r\n    }\r\n\r\n    function getBountyForVf(uint256 _bounty)\r\n        external \r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 40);\r\n    }\r\n\r\n    function getBountyForAmphi(uint256 _bounty)\r\n        external \r\n        pure\r\n        returns (uint256 _money)\r\n    {\r\n        _money = getPercentage(_bounty, 10);\r\n    }\r\n\r\n    //计算任务赏金\r\n    function getPercentage(uint256 _number, uint256 _ratio)\r\n        public\r\n        pure\r\n        returns (uint256 returnNumber)\r\n    {\r\n        returnNumber = _number* _ratio / 100;\r\n    }\r\n\r\n    //计算罚金\r\n    function getPunish(uint256 _ratio, uint256 _bounty)\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return _bounty/ _ratio;\r\n    }\r\n\r\n    //计算扣除的赏金\r\n    function getDeductMoney(uint256 _bounty, uint256 _deduct)\r\n        public\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return getPercentage(_bounty, _deduct);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CalculateUtils.sol": {
				"CalculateUtils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "ParameterException",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getBountyForAmphi",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getBountyForTrans",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getBountyForVf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_deduct",
									"type": "uint256"
								}
							],
							"name": "getDeductMoney",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_transNumber",
									"type": "uint256"
								}
							],
							"name": "getMatNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_number",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								}
							],
							"name": "getPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "returnNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ratio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bounty",
									"type": "uint256"
								}
							],
							"name": "getPunish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_bounts",
									"type": "uint256"
								}
							],
							"name": "punishRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CalculateUtils.sol\":95:2823  contract CalculateUtils {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CalculateUtils.sol\":95:2823  contract CalculateUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa16eb4d3\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xa16eb4d3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xab2acba4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2e60202\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf74f3655\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x4f6ca3ce\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8e4b0bbd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f861ba7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9ce5c4bf\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CalculateUtils.sol\":256:1053  function punishRatio(uint256 _bounts) public pure returns (uint256) {\r... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":1010:1035   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":998:1000   */\n      0x20\n        /* \"#utility.yul\":983:1001   */\n      add\n        /* \"CalculateUtils.sol\":256:1053  function punishRatio(uint256 _bounts) public pure returns (uint256) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CalculateUtils.sol\":1858:2025  function getBountyForVf(uint256 _bounty)\r... */\n    tag_4:\n      tag_12\n      tag_19\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n        /* \"CalculateUtils.sol\":2643:2820  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n    tag_5:\n      tag_12\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"CalculateUtils.sol\":2451:2606  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n    tag_6:\n      tag_12\n      tag_28\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n        /* \"CalculateUtils.sol\":2033:2203  function getBountyForAmphi(uint256 _bounty)\r... */\n    tag_7:\n      tag_12\n      tag_32\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n        /* \"CalculateUtils.sol\":1681:1850  function getBountyForTrans(uint256 _bounty)\r... */\n    tag_8:\n      tag_12\n      tag_36\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n        /* \"CalculateUtils.sol\":1344:1637  function getMatNumber(uint256 _transNumber)\r... */\n    tag_9:\n      tag_12\n      tag_40\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"CalculateUtils.sol\":2237:2423  function getPercentage(uint256 _number, uint256 _ratio)\r... */\n    tag_10:\n      tag_12\n      tag_44\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"CalculateUtils.sol\":256:1053  function punishRatio(uint256 _bounts) public pure returns (uint256) {\r... */\n    tag_15:\n        /* \"CalculateUtils.sol\":315:322  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":335:348  uint256 ratio */\n      dup1\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n        /* \"CalculateUtils.sol\":363:370  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":363:377  _bounts < RATE */\n      lt\n        /* \"CalculateUtils.sol\":359:1023  if (_bounts < RATE) {\r... */\n      iszero\n      tag_48\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":402:403  1 */\n      0x01\n        /* \"CalculateUtils.sol\":359:1023  if (_bounts < RATE) {\r... */\n      jump(tag_74)\n    tag_48:\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n        /* \"CalculateUtils.sol\":425:432  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":425:440  _bounts >= RATE */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":425:464  _bounts >= RATE && _bounts < RATE * 1e1 */\n      dup1\n      iszero\n      tag_50\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":454:464  RATE * 1e1 */\n      tag_51\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n        /* \"CalculateUtils.sol\":461:464  1e1 */\n      0x0a\n        /* \"CalculateUtils.sol\":454:464  RATE * 1e1 */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"CalculateUtils.sol\":444:451  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":444:464  _bounts < RATE * 1e1 */\n      lt\n        /* \"CalculateUtils.sol\":425:464  _bounts >= RATE && _bounts < RATE * 1e1 */\n    tag_50:\n        /* \"CalculateUtils.sol\":421:1023  if (_bounts >= RATE && _bounts < RATE * 1e1) {\r... */\n      iszero\n      tag_53\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":489:492  1e1 */\n      0x0a\n        /* \"CalculateUtils.sol\":421:1023  if (_bounts >= RATE && _bounts < RATE * 1e1) {\r... */\n      jump(tag_74)\n    tag_53:\n        /* \"CalculateUtils.sol\":525:535  RATE * 1e1 */\n      tag_55\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n        /* \"CalculateUtils.sol\":532:535  1e1 */\n      0x0a\n        /* \"CalculateUtils.sol\":525:535  RATE * 1e1 */\n      tag_52\n      jump\t// in\n    tag_55:\n        /* \"CalculateUtils.sol\":514:521  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":514:535  _bounts >= RATE * 1e1 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":514:559  _bounts >= RATE * 1e1 && _bounts < RATE * 1e2 */\n      dup1\n      iszero\n      tag_56\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":549:559  RATE * 1e2 */\n      tag_57\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n      dup1\n        /* \"CalculateUtils.sol\":549:559  RATE * 1e2 */\n      tag_52\n      jump\t// in\n    tag_57:\n        /* \"CalculateUtils.sol\":539:546  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":539:559  _bounts < RATE * 1e2 */\n      lt\n        /* \"CalculateUtils.sol\":514:559  _bounts >= RATE * 1e1 && _bounts < RATE * 1e2 */\n    tag_56:\n        /* \"CalculateUtils.sol\":510:1023  if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r... */\n      iszero\n      tag_58\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":584:587  1e2 */\n      0x64\n        /* \"CalculateUtils.sol\":510:1023  if (_bounts >= RATE * 1e1 && _bounts < RATE * 1e2) {\r... */\n      jump(tag_74)\n    tag_58:\n        /* \"CalculateUtils.sol\":620:630  RATE * 1e2 */\n      tag_60\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n      dup1\n        /* \"CalculateUtils.sol\":620:630  RATE * 1e2 */\n      tag_52\n      jump\t// in\n    tag_60:\n        /* \"CalculateUtils.sol\":609:616  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":609:630  _bounts >= RATE * 1e2 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":609:654  _bounts >= RATE * 1e2 && _bounts < RATE * 1e3 */\n      dup1\n      iszero\n      tag_61\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":644:654  RATE * 1e3 */\n      tag_62\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n        /* \"CalculateUtils.sol\":651:654  1e3 */\n      0x03e8\n        /* \"CalculateUtils.sol\":644:654  RATE * 1e3 */\n      tag_52\n      jump\t// in\n    tag_62:\n        /* \"CalculateUtils.sol\":634:641  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":634:654  _bounts < RATE * 1e3 */\n      lt\n        /* \"CalculateUtils.sol\":609:654  _bounts >= RATE * 1e2 && _bounts < RATE * 1e3 */\n    tag_61:\n        /* \"CalculateUtils.sol\":605:1023  if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r... */\n      iszero\n      tag_63\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":679:682  1e3 */\n      0x03e8\n        /* \"CalculateUtils.sol\":605:1023  if (_bounts >= RATE * 1e2 && _bounts < RATE * 1e3) {\r... */\n      jump(tag_74)\n    tag_63:\n        /* \"CalculateUtils.sol\":715:725  RATE * 1e3 */\n      tag_65\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n        /* \"CalculateUtils.sol\":722:725  1e3 */\n      0x03e8\n        /* \"CalculateUtils.sol\":715:725  RATE * 1e3 */\n      tag_52\n      jump\t// in\n    tag_65:\n        /* \"CalculateUtils.sol\":704:711  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":704:725  _bounts >= RATE * 1e3 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":704:750  _bounts >= RATE * 1e3 && _bounts <= RATE * 1e4 */\n      dup1\n      iszero\n      tag_66\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":740:750  RATE * 1e4 */\n      tag_67\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n        /* \"CalculateUtils.sol\":747:750  1e4 */\n      0x2710\n        /* \"CalculateUtils.sol\":740:750  RATE * 1e4 */\n      tag_52\n      jump\t// in\n    tag_67:\n        /* \"CalculateUtils.sol\":729:736  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":729:750  _bounts <= RATE * 1e4 */\n      gt\n      iszero\n        /* \"CalculateUtils.sol\":704:750  _bounts >= RATE * 1e3 && _bounts <= RATE * 1e4 */\n    tag_66:\n        /* \"CalculateUtils.sol\":700:1023  if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r... */\n      iszero\n      tag_68\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":775:778  1e4 */\n      0x2710\n        /* \"CalculateUtils.sol\":700:1023  if (_bounts >= RATE * 1e3 && _bounts <= RATE * 1e4) {\r... */\n      jump(tag_74)\n    tag_68:\n        /* \"CalculateUtils.sol\":811:821  RATE * 1e4 */\n      tag_70\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n        /* \"CalculateUtils.sol\":818:821  1e4 */\n      0x2710\n        /* \"CalculateUtils.sol\":811:821  RATE * 1e4 */\n      tag_52\n      jump\t// in\n    tag_70:\n        /* \"CalculateUtils.sol\":800:807  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":800:821  _bounts >= RATE * 1e4 */\n      lt\n      iszero\n        /* \"CalculateUtils.sol\":800:846  _bounts >= RATE * 1e4 && _bounts <= RATE * 1e5 */\n      dup1\n      iszero\n      tag_71\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":836:846  RATE * 1e5 */\n      tag_72\n        /* \"CalculateUtils.sol\":150:153  100 */\n      0x64\n        /* \"CalculateUtils.sol\":843:846  1e5 */\n      0x0186a0\n        /* \"CalculateUtils.sol\":836:846  RATE * 1e5 */\n      tag_52\n      jump\t// in\n    tag_72:\n        /* \"CalculateUtils.sol\":825:832  _bounts */\n      dup4\n        /* \"CalculateUtils.sol\":825:846  _bounts <= RATE * 1e5 */\n      gt\n      iszero\n        /* \"CalculateUtils.sol\":800:846  _bounts >= RATE * 1e4 && _bounts <= RATE * 1e5 */\n    tag_71:\n        /* \"CalculateUtils.sol\":796:1023  if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r... */\n      iszero\n      tag_73\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":871:874  1e5 */\n      0x0186a0\n        /* \"CalculateUtils.sol\":796:1023  if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r... */\n      jump(tag_74)\n    tag_73:\n        /* \"CalculateUtils.sol\":914:1011  ParameterException(\r... */\n      mload(0x40)\n      shl(0xe2, 0x347626dd)\n      dup2\n      mstore\n        /* \"#utility.yul\":654:656   */\n      0x20\n        /* \"CalculateUtils.sol\":914:1011  ParameterException(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":636:657   */\n      mstore\n        /* \"#utility.yul\":693:695   */\n      0x2b\n        /* \"#utility.yul\":673:691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":666:696   */\n      mstore\n        /* \"#utility.yul\":732:766   */\n      0x556e61626c6520746f2063616c63756c6174652c506c65617365207375626d69\n        /* \"#utility.yul\":712:730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":705:767   */\n      mstore\n      shl(0xaa, 0x1d0818481c995c5d595cdd)\n        /* \"#utility.yul\":783:801   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":776:817   */\n      mstore\n        /* \"#utility.yul\":834:853   */\n      0x84\n      add\n        /* \"CalculateUtils.sol\":914:1011  ParameterException(\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CalculateUtils.sol\":796:1023  if (_bounts >= RATE * 1e4 && _bounts <= RATE * 1e5) {\r... */\n    tag_74:\n        /* \"CalculateUtils.sol\":1040:1045  ratio */\n      swap3\n        /* \"CalculateUtils.sol\":256:1053  function punishRatio(uint256 _bounts) public pure returns (uint256) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":1858:2025  function getBountyForVf(uint256 _bounty)\r... */\n    tag_20:\n        /* \"CalculateUtils.sol\":1950:1964  uint256 _money */\n      0x00\n        /* \"CalculateUtils.sol\":1991:2017  getPercentage(_bounty, 40) */\n      tag_74\n        /* \"CalculateUtils.sol\":2005:2012  _bounty */\n      dup3\n        /* \"CalculateUtils.sol\":2014:2016  40 */\n      0x28\n        /* \"CalculateUtils.sol\":1991:2004  getPercentage */\n      tag_45\n        /* \"CalculateUtils.sol\":1991:2017  getPercentage(_bounty, 40) */\n      jump\t// in\n        /* \"CalculateUtils.sol\":2643:2820  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n    tag_25:\n        /* \"CalculateUtils.sol\":2749:2756  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":2781:2812  getPercentage(_bounty, _deduct) */\n      tag_80\n        /* \"CalculateUtils.sol\":2795:2802  _bounty */\n      dup4\n        /* \"CalculateUtils.sol\":2804:2811  _deduct */\n      dup4\n        /* \"CalculateUtils.sol\":2781:2794  getPercentage */\n      tag_45\n        /* \"CalculateUtils.sol\":2781:2812  getPercentage(_bounty, _deduct) */\n      jump\t// in\n    tag_80:\n        /* \"CalculateUtils.sol\":2774:2812  return getPercentage(_bounty, _deduct) */\n      swap4\n        /* \"CalculateUtils.sol\":2643:2820  function getDeductMoney(uint256 _bounty, uint256 _deduct)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CalculateUtils.sol\":2451:2606  function getPunish(uint256 _ratio, uint256 _bounty)\r... */\n    tag_29:\n        /* \"CalculateUtils.sol\":2551:2558  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":2583:2598  _bounty/ _ratio */\n      tag_80\n        /* \"CalculateUtils.sol\":2592:2598  _ratio */\n      dup4\n        /* \"CalculateUtils.sol\":2583:2590  _bounty */\n      dup4\n        /* \"CalculateUtils.sol\":2583:2598  _bounty/ _ratio */\n      tag_83\n      jump\t// in\n        /* \"CalculateUtils.sol\":2033:2203  function getBountyForAmphi(uint256 _bounty)\r... */\n    tag_33:\n        /* \"CalculateUtils.sol\":2128:2142  uint256 _money */\n      0x00\n        /* \"CalculateUtils.sol\":2169:2195  getPercentage(_bounty, 10) */\n      tag_74\n        /* \"CalculateUtils.sol\":2183:2190  _bounty */\n      dup3\n        /* \"CalculateUtils.sol\":2192:2194  10 */\n      0x0a\n        /* \"CalculateUtils.sol\":2169:2182  getPercentage */\n      tag_45\n        /* \"CalculateUtils.sol\":2169:2195  getPercentage(_bounty, 10) */\n      jump\t// in\n        /* \"CalculateUtils.sol\":1681:1850  function getBountyForTrans(uint256 _bounty)\r... */\n    tag_37:\n        /* \"CalculateUtils.sol\":1775:1789  uint256 _money */\n      0x00\n        /* \"CalculateUtils.sol\":1816:1842  getPercentage(_bounty, 60) */\n      tag_74\n        /* \"CalculateUtils.sol\":1830:1837  _bounty */\n      dup3\n        /* \"CalculateUtils.sol\":1839:1841  60 */\n      0x3c\n        /* \"CalculateUtils.sol\":1816:1829  getPercentage */\n      tag_45\n        /* \"CalculateUtils.sol\":1816:1842  getPercentage(_bounty, 60) */\n      jump\t// in\n        /* \"CalculateUtils.sol\":1344:1637  function getMatNumber(uint256 _transNumber)\r... */\n    tag_41:\n        /* \"CalculateUtils.sol\":1438:1445  uint256 */\n      0x00\n        /* \"CalculateUtils.sol\":1463:1476  uint256 _maxV */\n      dup1\n        /* \"CalculateUtils.sol\":184:185  3 */\n      0x03\n        /* \"CalculateUtils.sol\":1491:1503  _transNumber */\n      dup4\n        /* \"CalculateUtils.sol\":1491:1511  _transNumber <= VF_N */\n      gt\n        /* \"CalculateUtils.sol\":1487:1607  if (_transNumber <= VF_N) {\r... */\n      tag_89\n      jumpi\n      pop\n        /* \"CalculateUtils.sol\":1536:1537  1 */\n      0x01\n        /* \"CalculateUtils.sol\":1487:1607  if (_transNumber <= VF_N) {\r... */\n      jump(tag_74)\n    tag_89:\n        /* \"CalculateUtils.sol\":1578:1595  _transNumber/VF_N */\n      tag_80\n        /* \"CalculateUtils.sol\":184:185  3 */\n      0x03\n        /* \"CalculateUtils.sol\":1578:1590  _transNumber */\n      dup5\n        /* \"CalculateUtils.sol\":1578:1595  _transNumber/VF_N */\n      tag_83\n      jump\t// in\n        /* \"CalculateUtils.sol\":2237:2423  function getPercentage(uint256 _number, uint256 _ratio)\r... */\n    tag_45:\n        /* \"CalculateUtils.sol\":2341:2361  uint256 returnNumber */\n      0x00\n        /* \"CalculateUtils.sol\":2412:2415  100 */\n      0x64\n        /* \"CalculateUtils.sol\":2394:2409  _number* _ratio */\n      tag_93\n        /* \"CalculateUtils.sol\":2403:2409  _ratio */\n      dup4\n        /* \"CalculateUtils.sol\":2394:2401  _number */\n      dup6\n        /* \"CalculateUtils.sol\":2394:2409  _number* _ratio */\n      tag_52\n      jump\t// in\n    tag_93:\n        /* \"CalculateUtils.sol\":2394:2415  _number* _ratio / 100 */\n      tag_80\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_97:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:447   */\n    tag_24:\n        /* \"#utility.yul\":267:273   */\n      0x00\n        /* \"#utility.yul\":275:281   */\n      dup1\n        /* \"#utility.yul\":328:330   */\n      0x40\n        /* \"#utility.yul\":316:325   */\n      dup4\n        /* \"#utility.yul\":307:314   */\n      dup6\n        /* \"#utility.yul\":303:326   */\n      sub\n        /* \"#utility.yul\":299:331   */\n      slt\n        /* \"#utility.yul\":296:348   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":344:345   */\n      0x00\n        /* \"#utility.yul\":341:342   */\n      dup1\n        /* \"#utility.yul\":334:346   */\n      revert\n        /* \"#utility.yul\":296:348   */\n    tag_99:\n      pop\n      pop\n        /* \"#utility.yul\":367:390   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":437:439   */\n      0x20\n        /* \"#utility.yul\":422:440   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":409:441   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":199:447   */\n      jump\t// out\n        /* \"#utility.yul\":1046:1263   */\n    tag_83:\n        /* \"#utility.yul\":1086:1087   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup3\n        /* \"#utility.yul\":1102:1234   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1156:1166   */\n      0x4e487b71\n        /* \"#utility.yul\":1151:1154   */\n      0xe0\n        /* \"#utility.yul\":1147:1167   */\n      shl\n        /* \"#utility.yul\":1144:1145   */\n      0x00\n        /* \"#utility.yul\":1137:1168   */\n      mstore\n        /* \"#utility.yul\":1191:1195   */\n      0x12\n        /* \"#utility.yul\":1188:1189   */\n      0x04\n        /* \"#utility.yul\":1181:1196   */\n      mstore\n        /* \"#utility.yul\":1219:1223   */\n      0x24\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1209:1224   */\n      revert\n        /* \"#utility.yul\":1102:1234   */\n    tag_103:\n      pop\n        /* \"#utility.yul\":1248:1257   */\n      div\n      swap1\n        /* \"#utility.yul\":1046:1263   */\n      jump\t// out\n        /* \"#utility.yul\":1268:1533   */\n    tag_52:\n        /* \"#utility.yul\":1308:1315   */\n      0x00\n        /* \"#utility.yul\":1374:1375   */\n      dup2\n        /* \"#utility.yul\":1370:1371   */\n      0x00\n        /* \"#utility.yul\":1366:1372   */\n      not\n        /* \"#utility.yul\":1362:1376   */\n      div\n        /* \"#utility.yul\":1359:1360   */\n      dup4\n        /* \"#utility.yul\":1356:1377   */\n      gt\n        /* \"#utility.yul\":1351:1352   */\n      dup3\n        /* \"#utility.yul\":1344:1353   */\n      iszero\n        /* \"#utility.yul\":1337:1354   */\n      iszero\n        /* \"#utility.yul\":1333:1378   */\n      and\n        /* \"#utility.yul\":1330:1498   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1420:1430   */\n      0x4e487b71\n        /* \"#utility.yul\":1415:1418   */\n      0xe0\n        /* \"#utility.yul\":1411:1431   */\n      shl\n        /* \"#utility.yul\":1408:1409   */\n      0x00\n        /* \"#utility.yul\":1401:1432   */\n      mstore\n        /* \"#utility.yul\":1455:1459   */\n      0x11\n        /* \"#utility.yul\":1452:1453   */\n      0x04\n        /* \"#utility.yul\":1445:1460   */\n      mstore\n        /* \"#utility.yul\":1483:1487   */\n      0x24\n        /* \"#utility.yul\":1480:1481   */\n      0x00\n        /* \"#utility.yul\":1473:1488   */\n      revert\n        /* \"#utility.yul\":1330:1498   */\n    tag_105:\n      pop\n        /* \"#utility.yul\":1518:1527   */\n      mul\n      swap1\n        /* \"#utility.yul\":1268:1533   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122001800bb6510249dbf8c592d58527a30fdace7407526c90ca8f7601750050072b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103e8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a16eb4d31161005b578063a16eb4d3146100eb578063ab2acba4146100fe578063f2e6020214610111578063f74f36551461012457600080fd5b80634f6ca3ce1461008d5780638e4b0bbd146100b25780638f861ba7146100c55780639ce5c4bf146100d8575b600080fd5b6100a061009b366004610328565b610137565b60405190815260200160405180910390f35b6100a06100c0366004610328565b6102ac565b6100a06100d3366004610341565b6102b9565b6100a06100e6366004610341565b6102cc565b6100a06100f9366004610328565b6102d8565b6100a061010c366004610328565b6102e5565b6100a061011f366004610328565b6102f2565b6100a0610132366004610341565b610310565b600080606483101561014b575060016102a6565b6064831015801561016657506101636064600a610385565b83105b156101735750600a6102a6565b61017f6064600a610385565b83101580156101975750610194606480610385565b83105b156101a4575060646102a6565b6101af606480610385565b83101580156101c957506101c660646103e8610385565b83105b156101d757506103e86102a6565b6101e460646103e8610385565b83101580156101ff57506101fb6064612710610385565b8311155b1561020d57506127106102a6565b61021a6064612710610385565b831015801561023657506102326064620186a0610385565b8311155b156102455750620186a06102a6565b60405163347626dd60e21b815260206004820152602b60248201527f556e61626c6520746f2063616c63756c6174652c506c65617365207375626d6960448201526a1d0818481c995c5d595cdd60aa1b606482015260840160405180910390fd5b92915050565b60006102a6826028610310565b60006102c58383610310565b9392505050565b60006102c58383610363565b60006102a682600a610310565b60006102a682603c610310565b60008060038311610305575060016102a6565b6102c5600384610363565b6000606461031e8385610385565b6102c59190610363565b60006020828403121561033a57600080fd5b5035919050565b6000806040838503121561035457600080fd5b50508035926020909101359150565b60008261038057634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156103ad57634e487b7160e01b600052601160045260246000fd5b50029056fea264697066735822122001800bb6510249dbf8c592d58527a30fdace7407526c90ca8f7601750050072b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA16EB4D3 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA16EB4D3 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xAB2ACBA4 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0xF74F3655 EQ PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x8E4B0BBD EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x10C CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 DUP4 LT ISZERO PUSH2 0x14B JUMPI POP PUSH1 0x1 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x64 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x166 JUMPI POP PUSH2 0x163 PUSH1 0x64 PUSH1 0xA PUSH2 0x385 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x173 JUMPI POP PUSH1 0xA PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x17F PUSH1 0x64 PUSH1 0xA PUSH2 0x385 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x197 JUMPI POP PUSH2 0x194 PUSH1 0x64 DUP1 PUSH2 0x385 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x1A4 JUMPI POP PUSH1 0x64 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x64 DUP1 PUSH2 0x385 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1C9 JUMPI POP PUSH2 0x1C6 PUSH1 0x64 PUSH2 0x3E8 PUSH2 0x385 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x1D7 JUMPI POP PUSH2 0x3E8 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x1E4 PUSH1 0x64 PUSH2 0x3E8 PUSH2 0x385 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1FF JUMPI POP PUSH2 0x1FB PUSH1 0x64 PUSH2 0x2710 PUSH2 0x385 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x20D JUMPI POP PUSH2 0x2710 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x21A PUSH1 0x64 PUSH2 0x2710 PUSH2 0x385 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x236 JUMPI POP PUSH2 0x232 PUSH1 0x64 PUSH3 0x186A0 PUSH2 0x385 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x245 JUMPI POP PUSH3 0x186A0 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x347626DD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1D0818481C995C5D595CDD PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH1 0x28 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5 DUP4 DUP4 PUSH2 0x310 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5 DUP4 DUP4 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH1 0xA PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH1 0x3C PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 GT PUSH2 0x305 JUMPI POP PUSH1 0x1 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x2C5 PUSH1 0x3 DUP5 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x31E DUP4 DUP6 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x380 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP1 SIGNEXTEND 0xB6 MLOAD MUL 0x49 0xDB 0xF8 0xC5 SWAP3 0xD5 DUP6 0x27 LOG3 0xF 0xDA 0xCE PUSH21 0x7526C90CA8F7601750050072B64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "95:2728:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBountyForAmphi_195": {
									"entryPoint": 728,
									"id": 195,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBountyForTrans_165": {
									"entryPoint": 741,
									"id": 165,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBountyForVf_180": {
									"entryPoint": 684,
									"id": 180,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDeductMoney_242": {
									"entryPoint": 697,
									"id": 242,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getMatNumber_150": {
									"entryPoint": 754,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPercentage_213": {
									"entryPoint": 784,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPunish_227": {
									"entryPoint": 716,
									"id": 227,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@punishRatio_121": {
									"entryPoint": 311,
									"id": 121,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1535:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "286:161:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "332:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "341:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "344:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "334:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "334:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "334:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "307:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "316:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "303:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "328:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "299:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:32:1"
															},
															"nodeType": "YulIf",
															"src": "296:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "357:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "380:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "367:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "357:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "399:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "426:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "437:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "422:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "422:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "409:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "409:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "399:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "244:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "255:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "267:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													}
												],
												"src": "199:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "626:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "643:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "654:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "636:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "636:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "677:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "688:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "673:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "693:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "666:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "727:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "712:18:1"
																	},
																	{
																		"hexValue": "556e61626c6520746f2063616c63756c6174652c506c65617365207375626d69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "732:34:1",
																		"type": "",
																		"value": "Unable to calculate,Please submi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "705:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "705:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "787:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "798:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "783:18:1"
																	},
																	{
																		"hexValue": "7420612072657175657374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "803:13:1",
																		"type": "",
																		"value": "t a request"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "776:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "849:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "826:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "603:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "617:4:1",
														"type": ""
													}
												],
												"src": "452:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "975:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "987:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "998:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "975:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1017:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1028:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1010:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "934:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "945:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "956:4:1",
														"type": ""
													}
												],
												"src": "864:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1092:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1123:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1144:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1151:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1156:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1147:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1147:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1137:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1137:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1137:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1188:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1191:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1181:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1181:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1181:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1216:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1219:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1209:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1209:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1209:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1112:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1105:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:9:1"
															},
															"nodeType": "YulIf",
															"src": "1102:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1243:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1252:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1255:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1248:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1248:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1243:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1077:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1080:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1086:1:1",
														"type": ""
													}
												],
												"src": "1046:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1320:213:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1408:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1415:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1420:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1411:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1411:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1401:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1401:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1401:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1452:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1455:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1445:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1445:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1445:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1480:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1483:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1473:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1473:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1473:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1351:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1344:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1344:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1337:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1337:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1359:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1370:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1366:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1366:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1374:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1362:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1362:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1356:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1356:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:45:1"
															},
															"nodeType": "YulIf",
															"src": "1330:168:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1507:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1522:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1525:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1507:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1299:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1302:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1308:7:1",
														"type": ""
													}
												],
												"src": "1268:265:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Unable to calculate,Please submi\")\n        mstore(add(headStart, 96), \"t a request\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063a16eb4d31161005b578063a16eb4d3146100eb578063ab2acba4146100fe578063f2e6020214610111578063f74f36551461012457600080fd5b80634f6ca3ce1461008d5780638e4b0bbd146100b25780638f861ba7146100c55780639ce5c4bf146100d8575b600080fd5b6100a061009b366004610328565b610137565b60405190815260200160405180910390f35b6100a06100c0366004610328565b6102ac565b6100a06100d3366004610341565b6102b9565b6100a06100e6366004610341565b6102cc565b6100a06100f9366004610328565b6102d8565b6100a061010c366004610328565b6102e5565b6100a061011f366004610328565b6102f2565b6100a0610132366004610341565b610310565b600080606483101561014b575060016102a6565b6064831015801561016657506101636064600a610385565b83105b156101735750600a6102a6565b61017f6064600a610385565b83101580156101975750610194606480610385565b83105b156101a4575060646102a6565b6101af606480610385565b83101580156101c957506101c660646103e8610385565b83105b156101d757506103e86102a6565b6101e460646103e8610385565b83101580156101ff57506101fb6064612710610385565b8311155b1561020d57506127106102a6565b61021a6064612710610385565b831015801561023657506102326064620186a0610385565b8311155b156102455750620186a06102a6565b60405163347626dd60e21b815260206004820152602b60248201527f556e61626c6520746f2063616c63756c6174652c506c65617365207375626d6960448201526a1d0818481c995c5d595cdd60aa1b606482015260840160405180910390fd5b92915050565b60006102a6826028610310565b60006102c58383610310565b9392505050565b60006102c58383610363565b60006102a682600a610310565b60006102a682603c610310565b60008060038311610305575060016102a6565b6102c5600384610363565b6000606461031e8385610385565b6102c59190610363565b60006020828403121561033a57600080fd5b5035919050565b6000806040838503121561035457600080fd5b50508035926020909101359150565b60008261038057634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156103ad57634e487b7160e01b600052601160045260246000fd5b50029056fea264697066735822122001800bb6510249dbf8c592d58527a30fdace7407526c90ca8f7601750050072b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA16EB4D3 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA16EB4D3 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0xAB2ACBA4 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xF2E60202 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0xF74F3655 EQ PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F6CA3CE EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x8E4B0BBD EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8F861BA7 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x9CE5C4BF EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x10C CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x341 JUMP JUMPDEST PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 DUP4 LT ISZERO PUSH2 0x14B JUMPI POP PUSH1 0x1 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x64 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x166 JUMPI POP PUSH2 0x163 PUSH1 0x64 PUSH1 0xA PUSH2 0x385 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x173 JUMPI POP PUSH1 0xA PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x17F PUSH1 0x64 PUSH1 0xA PUSH2 0x385 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x197 JUMPI POP PUSH2 0x194 PUSH1 0x64 DUP1 PUSH2 0x385 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x1A4 JUMPI POP PUSH1 0x64 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x1AF PUSH1 0x64 DUP1 PUSH2 0x385 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1C9 JUMPI POP PUSH2 0x1C6 PUSH1 0x64 PUSH2 0x3E8 PUSH2 0x385 JUMP JUMPDEST DUP4 LT JUMPDEST ISZERO PUSH2 0x1D7 JUMPI POP PUSH2 0x3E8 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x1E4 PUSH1 0x64 PUSH2 0x3E8 PUSH2 0x385 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1FF JUMPI POP PUSH2 0x1FB PUSH1 0x64 PUSH2 0x2710 PUSH2 0x385 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x20D JUMPI POP PUSH2 0x2710 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x21A PUSH1 0x64 PUSH2 0x2710 PUSH2 0x385 JUMP JUMPDEST DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x236 JUMPI POP PUSH2 0x232 PUSH1 0x64 PUSH3 0x186A0 PUSH2 0x385 JUMP JUMPDEST DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x245 JUMPI POP PUSH3 0x186A0 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x347626DD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1D0818481C995C5D595CDD PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH1 0x28 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5 DUP4 DUP4 PUSH2 0x310 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5 DUP4 DUP4 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH1 0xA PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH1 0x3C PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 GT PUSH2 0x305 JUMPI POP PUSH1 0x1 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x2C5 PUSH1 0x3 DUP5 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x31E DUP4 DUP6 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x380 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD DUP1 SIGNEXTEND 0xB6 MLOAD MUL 0x49 0xDB 0xF8 0xC5 SWAP3 0xD5 DUP6 0x27 LOG3 0xF 0xDA 0xCE PUSH21 0x7526C90CA8F7601750050072B64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "95:2728:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:797;;;;;;:::i;:::-;;:::i;:::-;;;1010:25:1;;;998:2;983:18;256:797:0;;;;;;;1858:167;;;;;;:::i;:::-;;:::i;2643:177::-;;;;;;:::i;:::-;;:::i;2451:155::-;;;;;;:::i;:::-;;:::i;2033:170::-;;;;;;:::i;:::-;;:::i;1681:169::-;;;;;;:::i;:::-;;:::i;1344:293::-;;;;;;:::i;:::-;;:::i;2237:186::-;;;;;;:::i;:::-;;:::i;256:797::-;315:7;335:13;150:3;363:7;:14;359:664;;;-1:-1:-1;402:1:0;359:664;;;150:3;425:7;:15;;:39;;;;-1:-1:-1;454:10:0;150:3;461;454:10;:::i;:::-;444:7;:20;425:39;421:602;;;-1:-1:-1;489:3:0;421:602;;;525:10;150:3;532;525:10;:::i;:::-;514:7;:21;;:45;;;;-1:-1:-1;549:10:0;150:3;;549:10;:::i;:::-;539:7;:20;514:45;510:513;;;-1:-1:-1;584:3:0;510:513;;;620:10;150:3;;620:10;:::i;:::-;609:7;:21;;:45;;;;-1:-1:-1;644:10:0;150:3;651;644:10;:::i;:::-;634:7;:20;609:45;605:418;;;-1:-1:-1;679:3:0;605:418;;;715:10;150:3;722;715:10;:::i;:::-;704:7;:21;;:46;;;;-1:-1:-1;740:10:0;150:3;747;740:10;:::i;:::-;729:7;:21;;704:46;700:323;;;-1:-1:-1;775:3:0;700:323;;;811:10;150:3;818;811:10;:::i;:::-;800:7;:21;;:46;;;;-1:-1:-1;836:10:0;150:3;843;836:10;:::i;:::-;825:7;:21;;800:46;796:227;;;-1:-1:-1;871:3:0;796:227;;;914:97;;-1:-1:-1;;;914:97:0;;654:2:1;914:97:0;;;636:21:1;693:2;673:18;;;666:30;732:34;712:18;;;705:62;-1:-1:-1;;;783:18:1;;;776:41;834:19;;914:97:0;;;;;;;796:227;1040:5;256:797;-1:-1:-1;;256:797:0:o;1858:167::-;1950:14;1991:26;2005:7;2014:2;1991:13;:26::i;2643:177::-;2749:7;2781:31;2795:7;2804;2781:13;:31::i;:::-;2774:38;2643:177;-1:-1:-1;;;2643:177:0:o;2451:155::-;2551:7;2583:15;2592:6;2583:7;:15;:::i;2033:170::-;2128:14;2169:26;2183:7;2192:2;2169:13;:26::i;1681:169::-;1775:14;1816:26;1830:7;1839:2;1816:13;:26::i;1344:293::-;1438:7;1463:13;184:1;1491:12;:20;1487:120;;-1:-1:-1;1536:1:0;1487:120;;;1578:17;184:1;1578:12;:17;:::i;2237:186::-;2341:20;2412:3;2394:15;2403:6;2394:7;:15;:::i;:::-;:21;;;;:::i;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;199:248::-;267:6;275;328:2;316:9;307:7;303:23;299:32;296:52;;;344:1;341;334:12;296:52;-1:-1:-1;;367:23:1;;;437:2;422:18;;;409:32;;-1:-1:-1;199:248:1:o;1046:217::-;1086:1;1112;1102:132;;1156:10;1151:3;1147:20;1144:1;1137:31;1191:4;1188:1;1181:15;1219:4;1216:1;1209:15;1102:132;-1:-1:-1;1248:9:1;;1046:217::o;1268:265::-;1308:7;1374:1;1370;1366:6;1362:14;1359:1;1356:21;1351:1;1344:9;1337:17;1333:45;1330:168;;;1420:10;1415:3;1411:20;1408:1;1401:31;1455:4;1452:1;1445:15;1483:4;1480:1;1473:15;1330:168;-1:-1:-1;1518:9:1;;1268:265::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "200000",
								"executionCost": "245",
								"totalCost": "200245"
							},
							"external": {
								"getBountyForAmphi(uint256)": "479",
								"getBountyForTrans(uint256)": "501",
								"getBountyForVf(uint256)": "502",
								"getDeductMoney(uint256,uint256)": "infinite",
								"getMatNumber(uint256)": "411",
								"getPercentage(uint256,uint256)": "525",
								"getPunish(uint256,uint256)": "431",
								"punishRatio(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 95,
									"end": 2823,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 2823,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001800bb6510249dbf8c592d58527a30fdace7407526c90ca8f7601750050072b64736f6c63430008070033",
									".code": [
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "A16EB4D3"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "A16EB4D3"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "AB2ACBA4"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "F2E60202"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "F74F3655"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "4F6CA3CE"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "8E4B0BBD"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "8F861BA7"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "9CE5C4BF"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 2823,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 363,
											"end": 370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 363,
											"end": 377,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 359,
											"end": 1023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 359,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 359,
											"end": 1023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 402,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 359,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 359,
											"end": 1023,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 359,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 425,
											"end": 432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 425,
											"end": 440,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 425,
											"end": 440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 425,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 425,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 454,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 461,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 454,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 454,
											"end": 464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 454,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 444,
											"end": 451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 444,
											"end": 464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 425,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 425,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 1023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 421,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 421,
											"end": 1023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 489,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 421,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 421,
											"end": 1023,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 421,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 532,
											"end": 535,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 525,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 525,
											"end": 535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 525,
											"end": 535,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 525,
											"end": 535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 514,
											"end": 521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 514,
											"end": 535,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 514,
											"end": 535,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 514,
											"end": 559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 514,
											"end": 559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 514,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 514,
											"end": 559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 549,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 549,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 539,
											"end": 559,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 514,
											"end": 559,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 514,
											"end": 559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 1023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 510,
											"end": 1023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 584,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 510,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 510,
											"end": 1023,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 510,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 620,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 620,
											"end": 630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 620,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 616,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 609,
											"end": 630,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 609,
											"end": 630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 609,
											"end": 654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 609,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 609,
											"end": 654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 644,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 651,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 644,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 644,
											"end": 654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 644,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 634,
											"end": 641,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 634,
											"end": 654,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 609,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 609,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 605,
											"end": 1023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 605,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 605,
											"end": 1023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 679,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 605,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 605,
											"end": 1023,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 605,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 722,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 715,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 715,
											"end": 725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 725,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 715,
											"end": 725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 704,
											"end": 725,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 704,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 704,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 740,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 747,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 740,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 740,
											"end": 750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 740,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 729,
											"end": 750,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 729,
											"end": 750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 704,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 704,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 1023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 700,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 700,
											"end": 1023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 775,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 700,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 700,
											"end": 1023,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 700,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 811,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 818,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 811,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 811,
											"end": 821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 811,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 811,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 800,
											"end": 821,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 800,
											"end": 821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 800,
											"end": 846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 800,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 800,
											"end": 846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 836,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 150,
											"end": 153,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 843,
											"end": 846,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 836,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 836,
											"end": 846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 846,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 836,
											"end": 846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 825,
											"end": 846,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 825,
											"end": 846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 800,
											"end": 846,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 800,
											"end": 846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 796,
											"end": 1023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 796,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 796,
											"end": 1023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 871,
											"end": 874,
											"name": "PUSH",
											"source": 0,
											"value": "186A0"
										},
										{
											"begin": 796,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 796,
											"end": 1023,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 796,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 796,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "347626DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 636,
											"end": 657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 693,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 673,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 673,
											"end": 691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 673,
											"end": 691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 666,
											"end": 696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 732,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "556E61626C6520746F2063616C63756C6174652C506C65617365207375626D69"
										},
										{
											"begin": 712,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 712,
											"end": 730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 705,
											"end": 767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D0818481C995C5D595CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 783,
											"end": 801,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 783,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 776,
											"end": 817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 834,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 834,
											"end": 853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 796,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 796,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 1053,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1991,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1991,
											"end": 2017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2795,
											"end": 2802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 2811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2781,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2812,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2643,
											"end": 2820,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2451,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2592,
											"end": 2598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2583,
											"end": 2590,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2583,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2583,
											"end": 2598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2033,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2183,
											"end": 2190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2169,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2169,
											"end": 2195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1681,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1775,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1830,
											"end": 1837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 1816,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1816,
											"end": 1842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1344,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 185,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1491,
											"end": 1503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1511,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1487,
											"end": 1607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1487,
											"end": 1607,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1607,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1487,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 185,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1578,
											"end": 1595,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2237,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2341,
											"end": 2361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2415,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2394,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2394,
											"end": 2409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2394,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2394,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 199,
											"end": 447,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 199,
											"end": 447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 267,
											"end": 273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 307,
											"end": 314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 303,
											"end": 326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 299,
											"end": 331,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 296,
											"end": 348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 296,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 296,
											"end": 348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 344,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 296,
											"end": 348,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 296,
											"end": 348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 437,
											"end": 439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 422,
											"end": 440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 409,
											"end": 441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 199,
											"end": 447,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1046,
											"end": 1263,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1046,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1102,
											"end": 1234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1147,
											"end": 1167,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1181,
											"end": 1196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1224,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1234,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1102,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1263,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1268,
											"end": 1533,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1268,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1376,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1360,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1377,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1354,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1498,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1330,
											"end": 1498,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1415,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1459,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1452,
											"end": 1453,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1445,
											"end": 1460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1480,
											"end": 1481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1488,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1330,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1533,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBountyForAmphi(uint256)": "a16eb4d3",
							"getBountyForTrans(uint256)": "ab2acba4",
							"getBountyForVf(uint256)": "8e4b0bbd",
							"getDeductMoney(uint256,uint256)": "8f861ba7",
							"getMatNumber(uint256)": "f2e60202",
							"getPercentage(uint256,uint256)": "f74f3655",
							"getPunish(uint256,uint256)": "9ce5c4bf",
							"punishRatio(uint256)": "4f6ca3ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"ParameterException\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getBountyForAmphi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getBountyForTrans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getBountyForVf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deduct\",\"type\":\"uint256\"}],\"name\":\"getDeductMoney\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transNumber\",\"type\":\"uint256\"}],\"name\":\"getMatNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"getPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"returnNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bounty\",\"type\":\"uint256\"}],\"name\":\"getPunish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bounts\",\"type\":\"uint256\"}],\"name\":\"punishRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CalculateUtils.sol\":\"CalculateUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CalculateUtils.sol\":{\"keccak256\":\"0x1ead62159c4109c3c188538ff4441abaf58c0418daff9d8a1e53f75718ba776c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20b1a3d7a4afeb53a75cf52f1e0fbf7d42be58f1ee8dc248abde7ce3c835313\",\"dweb:/ipfs/QmaQJGRcYhHjHsjpXJvTuXmevXGxtRYMxFVG2XMcVeEGip\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"CalculateUtils.sol": {
				"ast": {
					"absolutePath": "CalculateUtils.sol",
					"exportedSymbols": {
						"CalculateUtils": [
							243
						],
						"ParameterException": [
							5
						]
					},
					"id": 244,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"id": 5,
							"name": "ParameterException",
							"nameLocation": "64:18:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 5,
										"src": "83:6:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 2,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "83:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "82:8:0"
							},
							"src": "58:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 243,
							"linearizedBaseContracts": [
								243
							],
							"name": "CalculateUtils",
							"nameLocation": "104:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "RATE",
									"nameLocation": "143:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 243,
									"src": "126:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "126:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "150:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 11,
									"mutability": "constant",
									"name": "VF_N",
									"nameLocation": "177:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 243,
									"src": "160:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "160:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "184:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "324:729:0",
										"statements": [
											{
												"assignments": [
													19
												],
												"declarations": [
													{
														"constant": false,
														"id": 19,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "343:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 120,
														"src": "335:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 18,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 20,
												"nodeType": "VariableDeclarationStatement",
												"src": "335:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 21,
														"name": "_bounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "363:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 22,
														"name": "RATE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "373:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "363:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 29,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "425:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "436:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "425:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 32,
																"name": "_bounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "444:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 33,
																	"name": "RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "454:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "316531",
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "461:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "1e1"
																},
																"src": "454:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "444:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "425:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 43,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "514:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 44,
																		"name": "RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "525:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316531",
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "532:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "525:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "514:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 48,
																	"name": "_bounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "539:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 49,
																		"name": "RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "549:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "316532",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "556:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "1e2"
																	},
																	"src": "549:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "539:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "514:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 59,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "609:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 62,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 60,
																			"name": "RATE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 8,
																			"src": "620:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316532",
																			"id": 61,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "627:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "620:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "609:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 64,
																		"name": "_bounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "634:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 65,
																			"name": "RATE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 8,
																			"src": "644:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "316533",
																			"id": 66,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "651:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1e3"
																		},
																		"src": "644:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "634:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "609:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 79,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 75,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "704:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 78,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 76,
																				"name": "RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 8,
																				"src": "715:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316533",
																				"id": 77,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "722:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "715:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "704:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 84,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 80,
																			"name": "_bounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "729:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 83,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 81,
																				"name": "RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 8,
																				"src": "740:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316534",
																				"id": 82,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "747:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "1e4"
																			},
																			"src": "740:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "729:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "704:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 95,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 91,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 13,
																				"src": "800:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 94,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 92,
																					"name": "RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 8,
																					"src": "811:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316534",
																					"id": 93,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "818:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "811:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "800:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 96,
																				"name": "_bounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 13,
																				"src": "825:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 99,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 97,
																					"name": "RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 8,
																					"src": "836:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "316535",
																					"id": 98,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "843:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000_by_1",
																						"typeString": "int_const 100000"
																					},
																					"value": "1e5"
																				},
																				"src": "836:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "825:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "800:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 111,
																		"nodeType": "Block",
																		"src": "892:131:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"hexValue": "556e61626c6520746f2063616c63756c6174652c506c65617365207375626d697420612072657175657374",
																							"id": 108,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "951:45:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																								"typeString": "literal_string \"Unable to calculate,Please submit a request\""
																							},
																							"value": "Unable to calculate,Please submit a request"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_aba8fb29e9012008b69173abff83de96ced4c016288b70982a08ca567ed1a7f8",
																								"typeString": "literal_string \"Unable to calculate,Please submit a request\""
																							}
																						],
																						"id": 107,
																						"name": "ParameterException",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5,
																						"src": "914:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "914:97:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 110,
																				"nodeType": "RevertStatement",
																				"src": "907:104:0"
																			}
																		]
																	},
																	"id": 112,
																	"nodeType": "IfStatement",
																	"src": "796:227:0",
																	"trueBody": {
																		"id": 106,
																		"nodeType": "Block",
																		"src": "848:38:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 104,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 102,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 19,
																						"src": "863:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "316535",
																						"id": 103,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "871:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100000_by_1",
																							"typeString": "int_const 100000"
																						},
																						"value": "1e5"
																					},
																					"src": "863:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 105,
																				"nodeType": "ExpressionStatement",
																				"src": "863:11:0"
																			}
																		]
																	}
																},
																"id": 113,
																"nodeType": "IfStatement",
																"src": "700:323:0",
																"trueBody": {
																	"id": 90,
																	"nodeType": "Block",
																	"src": "752:38:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 88,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 86,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 19,
																					"src": "767:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "316534",
																					"id": 87,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "775:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "1e4"
																				},
																				"src": "767:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 89,
																			"nodeType": "ExpressionStatement",
																			"src": "767:11:0"
																		}
																	]
																}
															},
															"id": 114,
															"nodeType": "IfStatement",
															"src": "605:418:0",
															"trueBody": {
																"id": 74,
																"nodeType": "Block",
																"src": "656:38:0",
																"statements": [
																	{
																		"expression": {
																			"id": 72,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 70,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 19,
																				"src": "671:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "316533",
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "679:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1e3"
																			},
																			"src": "671:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 73,
																		"nodeType": "ExpressionStatement",
																		"src": "671:11:0"
																	}
																]
															}
														},
														"id": 115,
														"nodeType": "IfStatement",
														"src": "510:513:0",
														"trueBody": {
															"id": 58,
															"nodeType": "Block",
															"src": "561:38:0",
															"statements": [
																{
																	"expression": {
																		"id": 56,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 54,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "576:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "316532",
																			"id": 55,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "584:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "1e2"
																		},
																		"src": "576:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 57,
																	"nodeType": "ExpressionStatement",
																	"src": "576:11:0"
																}
															]
														}
													},
													"id": 116,
													"nodeType": "IfStatement",
													"src": "421:602:0",
													"trueBody": {
														"id": 42,
														"nodeType": "Block",
														"src": "466:38:0",
														"statements": [
															{
																"expression": {
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 38,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "481:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "316531",
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "489:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "1e1"
																	},
																	"src": "481:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 41,
																"nodeType": "ExpressionStatement",
																"src": "481:11:0"
															}
														]
													}
												},
												"id": 117,
												"nodeType": "IfStatement",
												"src": "359:664:0",
												"trueBody": {
													"id": 28,
													"nodeType": "Block",
													"src": "379:36:0",
													"statements": [
														{
															"expression": {
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 24,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "394:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "402:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "394:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 27,
															"nodeType": "ExpressionStatement",
															"src": "394:9:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 118,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "1040:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 17,
												"id": 119,
												"nodeType": "Return",
												"src": "1033:12:0"
											}
										]
									},
									"functionSelector": "4f6ca3ce",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "punishRatio",
									"nameLocation": "265:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "_bounts",
												"nameLocation": "285:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "277:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:17:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "315:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:9:0"
									},
									"scope": 243,
									"src": "256:797:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1452:185:0",
										"statements": [
											{
												"assignments": [
													129
												],
												"declarations": [
													{
														"constant": false,
														"id": 129,
														"mutability": "mutable",
														"name": "_maxV",
														"nameLocation": "1471:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1463:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 130,
												"nodeType": "VariableDeclarationStatement",
												"src": "1463:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 131,
														"name": "_transNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 132,
														"name": "VF_N",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1507:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1491:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 145,
													"nodeType": "Block",
													"src": "1555:52:0",
													"statements": [
														{
															"expression": {
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 139,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "1570:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 140,
																		"name": "_transNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1578:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 141,
																		"name": "VF_N",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "1591:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1578:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1570:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 144,
															"nodeType": "ExpressionStatement",
															"src": "1570:25:0"
														}
													]
												},
												"id": 146,
												"nodeType": "IfStatement",
												"src": "1487:120:0",
												"trueBody": {
													"id": 138,
													"nodeType": "Block",
													"src": "1513:36:0",
													"statements": [
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 134,
																	"name": "_maxV",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "1528:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1536:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1528:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "1528:9:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 147,
													"name": "_maxV",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "1624:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 127,
												"id": 148,
												"nodeType": "Return",
												"src": "1617:12:0"
											}
										]
									},
									"functionSelector": "f2e60202",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMatNumber",
									"nameLocation": "1353:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "_transNumber",
												"nameLocation": "1374:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1366:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:22:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1438:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:9:0"
									},
									"scope": 243,
									"src": "1344:293:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1796:54:0",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1807:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 159,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1830:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3630",
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1839:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																}
															],
															"id": 158,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "1816:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1816:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1807:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1807:35:0"
											}
										]
									},
									"functionSelector": "ab2acba4",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBountyForTrans",
									"nameLocation": "1690:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "1716:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1708:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:17:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "1783:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1775:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:16:0"
									},
									"scope": 243,
									"src": "1681:169:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "1971:54:0",
										"statements": [
											{
												"expression": {
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "1982:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 174,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "2005:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3430",
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2014:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_40_by_1",
																	"typeString": "int_const 40"
																},
																"value": "40"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_40_by_1",
																	"typeString": "int_const 40"
																}
															],
															"id": 173,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "1991:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1991:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1982:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "1982:35:0"
											}
										]
									},
									"functionSelector": "8e4b0bbd",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBountyForVf",
									"nameLocation": "1867:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "1890:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "1882:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1881:17:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "1958:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "1950:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:16:0"
									},
									"scope": 243,
									"src": "1858:167:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2149:54:0",
										"statements": [
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "2160:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 189,
																"name": "_bounty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "2183:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3130",
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2192:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															],
															"id": 188,
															"name": "getPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "2169:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2169:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2160:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "2160:35:0"
											}
										]
									},
									"functionSelector": "a16eb4d3",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBountyForAmphi",
									"nameLocation": "2042:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2068:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:17:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "_money",
												"nameLocation": "2136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:16:0"
									},
									"scope": 243,
									"src": "2033:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "2368:55:0",
										"statements": [
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "returnNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2379:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 205,
																"name": "_number",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "2394:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 206,
																"name": "_ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "2403:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2394:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2412:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2394:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2379:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "2379:36:0"
											}
										]
									},
									"functionSelector": "f74f3655",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPercentage",
									"nameLocation": "2246:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "_number",
												"nameLocation": "2268:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2260:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2285:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2277:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:33:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "returnNumber",
												"nameLocation": "2349:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2341:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:22:0"
									},
									"scope": 243,
									"src": "2237:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "2565:41:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "_bounty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2583:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 223,
														"name": "_ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2592:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2583:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 221,
												"id": 225,
												"nodeType": "Return",
												"src": "2576:22:0"
											}
										]
									},
									"functionSelector": "9ce5c4bf",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPunish",
									"nameLocation": "2460:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "_ratio",
												"nameLocation": "2478:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2470:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2494:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2486:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:33:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2551:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:9:0"
									},
									"scope": 243,
									"src": "2451:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2763:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "_bounty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "2795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 238,
															"name": "_deduct",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2804:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 236,
														"name": "getPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2781:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 235,
												"id": 240,
												"nodeType": "Return",
												"src": "2774:38:0"
											}
										]
									},
									"functionSelector": "8f861ba7",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeductMoney",
									"nameLocation": "2652:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "_bounty",
												"nameLocation": "2675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2667:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "_deduct",
												"nameLocation": "2692:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2684:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:34:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2749:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2748:9:0"
									},
									"scope": 243,
									"src": "2643:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 244,
							"src": "95:2728:0",
							"usedErrors": [
								5
							]
						}
					],
					"src": "33:2792:0"
				},
				"id": 0
			}
		}
	}
}